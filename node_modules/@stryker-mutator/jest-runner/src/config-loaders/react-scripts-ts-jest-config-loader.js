"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path = tslib_1.__importStar(require("path"));
const plugin_1 = require("@stryker-mutator/api/plugin");
const create_react_jest_config_1 = require("../utils/create-react-jest-config");
const plugin_tokens_1 = require("../plugin-tokens");
class ReactScriptsTSJestConfigLoader {
    constructor(log, resolve, projectRoot) {
        this.log = log;
        this.resolve = resolve;
        this.projectRoot = projectRoot;
    }
    loadConfig() {
        try {
            // Get the location of react-ts script, this is later used to generate the Jest configuration used for React projects.
            const reactScriptsTsLocation = path.join(this.resolve('react-scripts-ts/package.json'), '..');
            // Create the React configuration for Jest
            const jestConfiguration = this.createJestConfig(reactScriptsTsLocation);
            jestConfiguration.testEnvironment = 'jsdom';
            this.log.warn('DEPRECATED: The support for create-react-app-ts projects is deprecated and will be removed in the future. Please migrate your project to create-react-app and update your Stryker config setting to "create-react-app" (see https://create-react-app.dev/docs/adding-typescript/)');
            return jestConfiguration;
        }
        catch (e) {
            if (this.isNodeErrnoException(e) && e.code === 'MODULE_NOT_FOUND') {
                throw Error('Unable to locate package react-scripts-ts. ' + 'This package is required when projectType is set to "create-react-app-ts".');
            }
            throw e;
        }
    }
    isNodeErrnoException(arg) {
        return arg.code !== undefined;
    }
    createJestConfig(reactScriptsTsLocation) {
        return create_react_jest_config_1.createReactTsJestConfig((relativePath) => path.join(reactScriptsTsLocation, relativePath), this.projectRoot, false);
    }
}
exports.default = ReactScriptsTSJestConfigLoader;
ReactScriptsTSJestConfigLoader.inject = plugin_1.tokens(plugin_1.commonTokens.logger, plugin_tokens_1.resolveToken, plugin_tokens_1.projectRootToken);
//# sourceMappingURL=react-scripts-ts-jest-config-loader.js.map