/// <reference types="node" />
import { StrykerOptions } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import { Injector, PluginContext } from '@stryker-mutator/api/plugin';
import { TestRunner, MutantRunOptions, DryRunResult, MutantRunResult } from '@stryker-mutator/api/test-runner';
import JestTestAdapter from './jest-test-adapters/jest-test-adapter';
import JestConfigLoader from './config-loaders/jest-config-loader';
export declare function jestTestRunnerFactory(injector: Injector<PluginContext>): JestTestRunner;
export declare namespace jestTestRunnerFactory {
    var inject: ["$injector"];
}
export default class JestTestRunner implements TestRunner {
    private readonly log;
    private readonly processEnvRef;
    private readonly jestTestAdapter;
    private readonly jestConfig;
    private readonly enableFindRelatedTests;
    static inject: ["logger", "options", "PROCESS_ENV_TOKEN", "jestTestAdapter", "configLoader"];
    constructor(log: Logger, options: StrykerOptions, processEnvRef: NodeJS.ProcessEnv, jestTestAdapter: JestTestAdapter, configLoader: JestConfigLoader);
    dryRun(): Promise<DryRunResult>;
    mutantRun({ activeMutant, sandboxFileName }: MutantRunOptions): Promise<MutantRunResult>;
    private run;
    private collectRunResult;
    private collectSerializableErrorText;
    private setEnv;
    private processTestResults;
    private mergeConfigSettings;
}
//# sourceMappingURL=jest-test-runner.d.ts.map