"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.switchCaseMutantPlacer = void 0;
const core_1 = require("@babel/core");
const util_1 = require("../util");
/**
 * Places the mutants with consequent of a SwitchCase node. Uses an if-statement to do so.
 * @example
 *  case 'foo':
 *    if (stryMutAct_9fa48(0)) {} else {
 *      stryCov_9fa48(0);
 *      console.log('bar');
 *      break;
 *   }
 */
const switchCaseMutantPlacer = (path, mutants) => {
    if (path.isSwitchCase()) {
        // First transform the mutated ast before we start to apply mutants.
        const appliedMutants = mutants.map((mutant) => {
            const ast = util_1.createMutatedAst(path, mutant);
            if (!core_1.types.isSwitchCase(ast)) {
                throw new Error(`${switchCaseMutantPlacer.name} can only place SwitchCase syntax`);
            }
            return {
                ast,
                mutant,
            };
        });
        const instrumentedConsequent = appliedMutants.reduce(
        // Add if statements per mutant
        (prev, { ast, mutant }) => core_1.types.ifStatement(util_1.mutantTestExpression(mutant.id), core_1.types.blockStatement(ast.consequent), prev), core_1.types.blockStatement([core_1.types.expressionStatement(util_1.mutationCoverageSequenceExpression(mutants)), ...path.node.consequent]));
        path.replaceWith(core_1.types.switchCase(path.node.test, [instrumentedConsequent]));
        return true;
    }
    return false;
};
exports.switchCaseMutantPlacer = switchCaseMutantPlacer;
//# sourceMappingURL=switch-case-mutant-placer.js.map