"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = void 0;
const syntax_1 = require("../syntax");
const babel_transformer_1 = require("./babel-transformer");
const html_transformer_1 = require("./html-transformer");
/**
 * Transform the AST by generating mutants and placing them in the AST.
 * Supports all AST formats supported by Stryker.
 * @param ast The Abstract Syntax Tree
 * @param mutantCollector the mutant collector that will be used to register and administer mutants
 * @param transformerContext the options used during transforming
 */
function transform(ast, mutantCollector, transformerContext) {
    const context = {
        transform,
        options: transformerContext.options,
    };
    switch (ast.format) {
        case syntax_1.AstFormat.Html:
            html_transformer_1.transformHtml(ast, mutantCollector, context);
            break;
        case syntax_1.AstFormat.JS:
        case syntax_1.AstFormat.TS:
            babel_transformer_1.transformBabel(ast, mutantCollector, context);
            break;
    }
}
exports.transform = transform;
//# sourceMappingURL=transformer.js.map