import { types } from '@babel/core';
import { Mutant, NamedNodeMutation } from '../mutant';
export declare class MutantCollector {
    private readonly _mutants;
    private unplacedMutants;
    get mutants(): readonly Mutant[];
    /**
     * Adds a mutant to the internal mutant list.
     * @param fileName file name that houses the mutant
     * @param mutationSpecs the named node mutation to be added
     * @returns The mutant (for testability)
     */
    add(fileName: string, mutationSpecs: NamedNodeMutation): Mutant;
    findUnplacedMutantsInScope(scope: Pick<types.Node, 'start' | 'end'>): Mutant[];
    markMutantsAsPlaced(mutants: Mutant[]): void;
    hasPlacedMutants(fileName: string): boolean;
}
//# sourceMappingURL=mutant-collector.d.ts.map