"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArithmeticOperatorMutator = void 0;
const core_1 = require("@babel/core");
var ArithmeticOperators;
(function (ArithmeticOperators) {
    ArithmeticOperators["+"] = "-";
    ArithmeticOperators["-"] = "+";
    ArithmeticOperators["*"] = "/";
    ArithmeticOperators["/"] = "*";
    ArithmeticOperators["%"] = "*";
})(ArithmeticOperators || (ArithmeticOperators = {}));
class ArithmeticOperatorMutator {
    constructor() {
        this.operators = ArithmeticOperators;
        this.name = 'ArithmeticOperator';
    }
    mutate(path) {
        if (path.isBinaryExpression() && this.isSupported(path.node.operator)) {
            const mutatedOperator = this.operators[path.node.operator];
            const replacement = core_1.types.cloneNode(path.node, false);
            replacement.operator = mutatedOperator;
            return [{ original: path.node, replacement }];
        }
        return [];
    }
    isSupported(operator) {
        return Object.keys(this.operators).includes(operator);
    }
}
exports.ArithmeticOperatorMutator = ArithmeticOperatorMutator;
//# sourceMappingURL=arithmetic-operator-mutator.js.map