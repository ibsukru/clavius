"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnaryOperatorMutator = void 0;
const tslib_1 = require("tslib");
const types = tslib_1.__importStar(require("@babel/types"));
var UnaryOperators;
(function (UnaryOperators) {
    UnaryOperators["+"] = "-";
    UnaryOperators["-"] = "+";
    UnaryOperators["~"] = "";
})(UnaryOperators || (UnaryOperators = {}));
class UnaryOperatorMutator {
    constructor() {
        this.name = 'UnaryOperator';
        this.operators = UnaryOperators;
    }
    mutate(path) {
        if (path.isUnaryExpression() && this.isSupported(path.node.operator) && path.node.prefix) {
            const mutatedOperators = this.operators[path.node.operator];
            const replacement = mutatedOperators.length > 0 ? types.unaryExpression(mutatedOperators, path.node.argument) : types.cloneNode(path.node.argument, false);
            return [
                {
                    original: path.node,
                    replacement,
                },
            ];
        }
        return [];
    }
    isSupported(operator) {
        return Object.keys(this.operators).includes(operator);
    }
}
exports.UnaryOperatorMutator = UnaryOperatorMutator;
//# sourceMappingURL=unary-operator-mutator.js.map