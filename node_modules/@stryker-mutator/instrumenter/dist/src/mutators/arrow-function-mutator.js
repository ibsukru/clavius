"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrowFunctionMutator = void 0;
const tslib_1 = require("tslib");
const types = tslib_1.__importStar(require("@babel/types"));
class ArrowFunctionMutator {
    constructor() {
        this.name = 'ArrowFunction';
        this.undefinedIdentifierName = 'undefined';
    }
    mutate(path) {
        return path.isArrowFunctionExpression() &&
            !types.isBlockStatement(path.node.body) &&
            !(types.isIdentifier(path.node.body) && path.node.body.name === this.undefinedIdentifierName)
            ? [{ original: path.node, replacement: types.arrowFunctionExpression([], types.identifier(this.undefinedIdentifierName)) }]
            : [];
    }
}
exports.ArrowFunctionMutator = ArrowFunctionMutator;
//# sourceMappingURL=arrow-function-mutator.js.map