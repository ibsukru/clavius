import { NodePath } from '@babel/core';
import { NodeMutation } from '../mutant';
import { NodeMutator } from './node-mutator';
export declare class BlockStatementMutator implements NodeMutator {
    name: string;
    mutate(path: NodePath): NodeMutation[];
    private isValid;
    private isEmpty;
    /**
     * Checks to see if a statement is an invalid constructor body
     * @example
     * // Invalid!
     * class Foo extends Bar {
     *   constructor(public baz: string) {
     *     super(42);
     *   }
     * }
     * @example
     * // Invalid!
     * class Foo extends Bar {
     *   public baz = 'string';
     *   constructor() {
     *     super(42);
     *   }
     * }
     * @see https://github.com/stryker-mutator/stryker/issues/2314
     * @see https://github.com/stryker-mutator/stryker/issues/2474
     */
    private isInvalidConstructorBody;
    private containsTSParameterProperties;
    private containsInitializedClassProperties;
    private hasSuperExpressionOnFirstLine;
}
//# sourceMappingURL=block-statement-mutator.d.ts.map