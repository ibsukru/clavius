"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const errors_1 = require("../../src/errors");
describe('errors', () => {
    describe('errorToString', () => {
        it('should return empty string if error is undefined', () => {
            chai_1.expect(errors_1.errorToString(undefined)).eq('');
        });
        it('should convert a nodejs Errno error to string', () => {
            const error = {
                code: 'foo',
                errno: 20,
                message: 'message',
                name: 'name',
                path: 'bar',
                stack: 'qux',
                syscall: 'baz',
            };
            chai_1.expect(errors_1.errorToString(error)).eq('name: foo (baz) qux');
        });
        it('should convert a regular error to string', () => {
            const error = new Error('expected error');
            chai_1.expect(errors_1.errorToString(error)).eq(`Error: expected error\n${error.stack && error.stack.toString()}`);
        });
        it('should convert an error without a stack trace to string', () => {
            const error = new Error('expected error');
            delete error.stack;
            chai_1.expect(errors_1.errorToString(error)).eq('Error: expected error');
        });
    });
});
//# sourceMappingURL=errors.spec.js.map