import { KnownKeys } from './known-keys';
/**
 * Consolidates multiple consecutive white spaces into a single space.
 * @param str The string to be normalized
 */
export declare function normalizeWhitespaces(str: string): string;
/**
 * Given a base type, allows type safe access to the name of a property.
 * @param prop The property name
 */
export declare function propertyPath<T>(prop: keyof Pick<T, KnownKeys<T>>): string;
/**
 * A helper class to allow you to get type safe access to the name of a deep property of `T`
 * @example
 * ```ts
 * PropertyPathBuilder<StrykerOptions>('warnings').prop('unknownOptions').build()
 * ```
 */
export declare class PropertyPathBuilder<T> {
    private readonly pathSoFar;
    constructor(pathSoFar: string[]);
    prop<TProp extends KnownKeys<T>>(prop: TProp): PropertyPathBuilder<Pick<T, KnownKeys<T>>[TProp]>;
    /**
     * Build the (deep) path to the property name
     */
    build(): string;
    /**
     * Creates a new `PropertyPathBuilder` for type T
     */
    static create<T>(): PropertyPathBuilder<T>;
    toString(): string;
}
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping
 */
export declare function escapeRegExpLiteral(input: string): string;
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping
 */
export declare function escapeRegExp(input: string): string;
//# sourceMappingURL=string-utils.d.ts.map