import { Injector } from '@stryker-mutator/api/plugin';
import { StrykerOptions } from '@stryker-mutator/api/core';
import { MainContext, coreTokens } from '../di';
import InputFileCollection from '../input/input-file-collection';
import { LoggingClientContext } from '../logging';
import { DryRunContext } from './3-dry-run-executor';
export interface MutantInstrumenterContext extends MainContext {
    [coreTokens.inputFiles]: InputFileCollection;
    [coreTokens.loggingContext]: LoggingClientContext;
}
export declare class MutantInstrumenterExecutor {
    private readonly injector;
    private readonly inputFiles;
    private readonly options;
    static readonly inject: ["$injector", "inputFiles", "options"];
    constructor(injector: Injector<MutantInstrumenterContext>, inputFiles: InputFileCollection, options: StrykerOptions);
    execute(): Promise<Injector<DryRunContext>>;
    private replaceInstrumentedFiles;
}
//# sourceMappingURL=2-mutant-instrumenter-executor.d.ts.map