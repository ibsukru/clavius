"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PluginCreator = void 0;
const plugin_1 = require("@stryker-mutator/api/plugin");
class PluginCreator {
    constructor(kind, pluginResolver, injector) {
        this.kind = kind;
        this.pluginResolver = pluginResolver;
        this.injector = injector;
    }
    create(name) {
        const plugin = this.pluginResolver.resolve(this.kind, name);
        if (this.isFactoryPlugin(plugin)) {
            return this.injector.injectFunction(plugin.factory);
        }
        else if (this.isClassPlugin(plugin)) {
            return this.injector.injectClass(plugin.injectableClass);
        }
        else {
            throw new Error(`Plugin "${this.kind}:${name}" could not be created, missing "factory" or "injectableClass" property.`);
        }
    }
    isFactoryPlugin(plugin) {
        return !!plugin.factory;
    }
    isClassPlugin(plugin) {
        return !!plugin.injectableClass;
    }
    static createFactory(kind) {
        function factory(pluginResolver, injector) {
            return new PluginCreator(kind, pluginResolver, injector);
        }
        factory.inject = plugin_1.tokens(plugin_1.commonTokens.pluginResolver, plugin_1.commonTokens.injector);
        return factory;
    }
}
exports.PluginCreator = PluginCreator;
//# sourceMappingURL=plugin-creator.js.map