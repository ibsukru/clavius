"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckerFacade = exports.createCheckerFactory = void 0;
const check_1 = require("@stryker-mutator/api/check");
const typed_inject_1 = require("typed-inject");
const plugin_1 = require("@stryker-mutator/api/plugin");
const child_process_proxy_1 = require("../child-proxy/child-process-proxy");
const di_1 = require("../di");
const checker_worker_1 = require("./checker-worker");
createCheckerFactory.inject = typed_inject_1.tokens(plugin_1.commonTokens.options, di_1.coreTokens.loggingContext);
function createCheckerFactory(options, loggingContext) {
    return () => new CheckerFacade(options, loggingContext);
}
exports.createCheckerFactory = createCheckerFactory;
class CheckerFacade {
    constructor(options, loggingContext) {
        if (options.checkers.length) {
            this.childProcess = child_process_proxy_1.default.create(require.resolve('./checker-worker'), loggingContext, options, {}, process.cwd(), checker_worker_1.CheckerWorker);
        }
    }
    async dispose() {
        if (this.childProcess) {
            await this.childProcess.dispose();
        }
    }
    async init() {
        if (this.childProcess) {
            return this.childProcess.proxy.init();
        }
    }
    async check(mutant) {
        if (this.childProcess) {
            return this.childProcess.proxy.check(mutant);
        }
        return {
            status: check_1.CheckStatus.Passed,
        };
    }
}
exports.CheckerFacade = CheckerFacade;
//# sourceMappingURL=checker-facade.js.map