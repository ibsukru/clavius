import { Checker, CheckResult } from '@stryker-mutator/api/check';
import { Mutant, StrykerOptions } from '@stryker-mutator/api/core';
import { Disposable } from 'typed-inject';
import { LoggingClientContext } from '../logging';
import { Worker } from '../concurrent/pool';
export declare function createCheckerFactory(options: StrykerOptions, loggingContext: LoggingClientContext): () => Checker;
export declare namespace createCheckerFactory {
    var inject: ["options", "loggingContext"];
}
export declare class CheckerFacade implements Checker, Disposable, Worker {
    private readonly childProcess?;
    constructor(options: StrykerOptions, loggingContext: LoggingClientContext);
    dispose(): Promise<void>;
    init(): Promise<void>;
    check(mutant: Mutant): Promise<CheckResult>;
}
//# sourceMappingURL=checker-facade.d.ts.map