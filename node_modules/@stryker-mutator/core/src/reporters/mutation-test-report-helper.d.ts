import { StrykerOptions, Mutant } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import { MutantResult, Reporter } from '@stryker-mutator/api/report';
import { CompleteDryRunResult, MutantRunResult } from '@stryker-mutator/api/test-runner';
import { PassedCheckResult, CheckResult } from '@stryker-mutator/api/check';
import InputFileCollection from '../input/input-file-collection';
import { MutantTestCoverage } from '../mutants/find-mutant-test-coverage';
/**
 * A helper class to convert and report mutants that survived or get killed
 */
export declare class MutationTestReportHelper {
    private readonly reporter;
    private readonly options;
    private readonly inputFiles;
    private readonly log;
    private readonly dryRunResult;
    private readonly testNamesById;
    static inject: ["reporter", "options", "inputFiles", "logger", "dryRunResult"];
    constructor(reporter: Required<Reporter>, options: StrykerOptions, inputFiles: InputFileCollection, log: Logger, dryRunResult: CompleteDryRunResult);
    reportCheckFailed(mutant: Mutant, checkResult: Exclude<CheckResult, PassedCheckResult>): MutantResult;
    reportNoCoverage(mutant: Mutant): MutantResult;
    reportMutantIgnored(mutant: Mutant): MutantResult;
    reportMutantRunResult(mutantWithTestCoverage: MutantTestCoverage, result: MutantRunResult): MutantResult;
    private reportOne;
    private checkStatusToResultStatus;
    reportAll(results: MutantResult[]): void;
    private determineExitCode;
    private mutationTestReport;
    private toFileResults;
    determineLanguage(name: string): string;
    private toMutantResult;
    private toLocation;
    private toPosition;
    private toStatus;
    private describe;
    private logUnsupportedMutantStatus;
}
//# sourceMappingURL=mutation-test-report-helper.d.ts.map