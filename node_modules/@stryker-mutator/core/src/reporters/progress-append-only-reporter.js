"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const os = require("os");
const progress_keeper_1 = require("./progress-keeper");
class ProgressAppendOnlyReporter extends progress_keeper_1.default {
    onAllMutantsMatchedWithTests(matchedMutants) {
        super.onAllMutantsMatchedWithTests(matchedMutants);
        if (matchedMutants.length) {
            this.intervalReference = setInterval(() => this.render(), 10000);
        }
    }
    onAllMutantsTested() {
        clearInterval(this.intervalReference);
    }
    render() {
        process.stdout.write(`Mutation testing ${this.getPercentDone()} (elapsed: ${this.getElapsedTime()}, remaining: ${this.getEtc()}) ` +
            `${this.progress.tested}/${this.progress.total} tested (${this.progress.survived} survived, ${this.progress.timedOut} timed out)` +
            os.EOL);
    }
    getPercentDone() {
        return `${Math.floor((this.progress.tested / this.progress.total) * 100)}%`;
    }
}
exports.default = ProgressAppendOnlyReporter;
//# sourceMappingURL=progress-append-only-reporter.js.map