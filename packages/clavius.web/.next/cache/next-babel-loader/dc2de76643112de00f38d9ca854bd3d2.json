{"ast":null,"code":"import _slicedToArray from \"/Users/iliyan/Documents/work/clavius/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/iliyan/Documents/work/clavius/packages/clavius.web/contexts/themeContext/themeContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useCookie } from '../../hooks';\nimport { otherTheme } from '.';\nexport var ThemeContext = /*#__PURE__*/createContext({\n  theme: 'dark',\n  setTheme: function setTheme() {\n    return undefined;\n  },\n  toggleTheme: function toggleTheme() {\n    return undefined;\n  }\n});\nexport var ThemeContextProvider = function ThemeContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      initialTheme = _ref.theme;\n\n  var _useCookie = useCookie('theme', initialTheme),\n      _useCookie2 = _slicedToArray(_useCookie, 2),\n      themeCookie = _useCookie2[0],\n      setThemeCookie = _useCookie2[1];\n\n  var theme = themeCookie;\n\n  var updateHtml = function updateHtml(newTheme) {\n    var _document$getElements;\n\n    var html = (_document$getElements = document.getElementsByTagName('html')) === null || _document$getElements === void 0 ? void 0 : _document$getElements[0];\n    if (!html) return;\n    var htmlClasses = html.classList;\n    htmlClasses.add(newTheme);\n  };\n\n  var setTheme = function setTheme(newTheme) {\n    updateHtml(newTheme);\n    setThemeCookie(newTheme);\n  };\n\n  var toggleTheme = function toggleTheme() {\n    var toggled = otherTheme(theme);\n    console.log(\"toggleTheme -> toggled\", toggled);\n    setTheme(toggled);\n    return toggled;\n  };\n\n  var value = {\n    theme: theme,\n    setTheme: setTheme,\n    toggleTheme: toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ThemeContextProvider, \"KFum6NGLLY8IX2p+qwjju3CtpPQ=\", false, function () {\n  return [useCookie];\n});\n\n_c = ThemeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/iliyan/Documents/work/clavius/packages/clavius.web/contexts/themeContext/themeContext.tsx"],"names":["createContext","useCookie","otherTheme","ThemeContext","theme","setTheme","undefined","toggleTheme","ThemeContextProvider","children","initialTheme","themeCookie","setThemeCookie","updateHtml","newTheme","html","document","getElementsByTagName","htmlClasses","classList","add","toggled","console","log","value"],"mappings":";;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAoDC,UAApD,QAAsE,GAAtE;AAEA,OAAO,IAAMC,YAAY,gBAAGH,aAAa,CAAmB;AAC1DI,EAAAA,KAAK,EAAE,MADmD;AAE1DC,EAAAA,QAAQ,EAAE;AAAA,WAAMC,SAAN;AAAA,GAFgD;AAG1DC,EAAAA,WAAW,EAAE;AAAA,WAAMD,SAAN;AAAA;AAH6C,CAAnB,CAAlC;AAMP,OAAO,IAAME,oBAEX,GAAG,SAFQA,oBAER,OAAuC;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAAnBC,YAAmB,QAA1BN,KAA0B;;AAAA,mBACJH,SAAS,CAAC,OAAD,EAAUS,YAAV,CADL;AAAA;AAAA,MACnCC,WADmC;AAAA,MACtBC,cADsB;;AAG1C,MAAMR,KAAK,GAAGO,WAAd;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAyB;AAAA;;AAC1C,QAAMC,IAAI,4BAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,CAAH,0DAAG,sBAAwC,CAAxC,CAAb;AACA,QAAI,CAACF,IAAL,EAAW;AAEX,QAAMG,WAAW,GAAGH,IAAI,CAACI,SAAzB;AACAD,IAAAA,WAAW,CAACE,GAAZ,CAAgBN,QAAhB;AACD,GAND;;AAQA,MAAMT,QAAsB,GAAG,SAAzBA,QAAyB,CAAAS,QAAQ,EAAI;AACzCD,IAAAA,UAAU,CAACC,QAAD,CAAV;AACAF,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAHD;;AAKA,MAAMP,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMc,OAAO,GAAGnB,UAAU,CAACE,KAAD,CAA1B;AACAkB,IAAAA,OAAO,CAACC,GAAR,2BAAsCF,OAAtC;AACAhB,IAAAA,QAAQ,CAACgB,OAAD,CAAR;AAEA,WAAOA,OAAP;AACD,GAND;;AAQA,MAAMG,KAAK,GAAG;AACZpB,IAAAA,KAAK,EAALA,KADY;AAEZC,IAAAA,QAAQ,EAARA,QAFY;AAGZE,IAAAA,WAAW,EAAXA;AAHY,GAAd;AAKA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEiB,KAA9B;AAAA,cAAsCf;AAAtC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAlCM;;GAAMD,oB;UAG2BP,S;;;KAH3BO,oB","sourcesContent":["import { createContext } from 'react'\nimport { useCookie } from '../../hooks'\nimport { setThemeType, themeContextType, themeType, otherTheme } from '.'\n\nexport const ThemeContext = createContext<themeContextType>({\n  theme: 'dark',\n  setTheme: () => undefined,\n  toggleTheme: () => undefined,\n})\n\nexport const ThemeContextProvider: React.FunctionComponent<{\n  theme: themeType\n}> = ({ children, theme: initialTheme }) => {\n  const [themeCookie, setThemeCookie] = useCookie('theme', initialTheme)\n\n  const theme = themeCookie as themeType\n\n  const updateHtml = (newTheme: themeType) => {\n    const html = document.getElementsByTagName('html')?.[0]\n    if (!html) return\n\n    const htmlClasses = html.classList\n    htmlClasses.add(newTheme)\n  }\n\n  const setTheme: setThemeType = newTheme => {\n    updateHtml(newTheme)\n    setThemeCookie(newTheme)\n  }\n\n  const toggleTheme = () => {\n    const toggled = otherTheme(theme)\n    console.log(`toggleTheme -> toggled`, toggled)\n    setTheme(toggled)\n\n    return toggled\n  }\n\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme,\n  }\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}