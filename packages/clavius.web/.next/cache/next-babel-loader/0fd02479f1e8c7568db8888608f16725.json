{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iliyan/Documents/work/clavius/packages/clavius.web/pages/_app.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport App from 'next/app';\nimport Cookies from 'js-cookie';\nimport { resetStyles, htmlStyles, nprogressStyles } from '../styles';\nimport { ThemeContextProvider } from '../contexts/themeContext';\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const theme = Cookies.get('theme') || 'dark';\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: resetStyles.__hash,\n        children: resetStyles\n      }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: htmlStyles.__hash,\n        children: htmlStyles\n      }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: nprogressStyles.__hash,\n        children: nprogressStyles\n      }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(ThemeContextProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/iliyan/Documents/work/clavius/packages/clavius.web/pages/_app.tsx"],"names":["React","Fragment","App","Cookies","resetStyles","htmlStyles","nprogressStyles","ThemeContextProvider","MyApp","render","Component","pageProps","props","theme","get"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,eAAlC,QAAyD,WAAzD;AACA,SAASC,oBAAT,QAAgD,0BAAhD;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtBO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,UAAMC,KAAK,GAAIV,OAAO,CAACW,GAAR,CAAY,OAAZ,KAAwB,MAAvC;AAEA,wBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAUE,QAAC,oBAAD;AAAsB,QAAA,KAAK,EAAED,KAA7B;AAAA,+BACE,QAAC,SAAD,oBAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AArBqB;;AAwBxB,eAAeH,KAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport App from 'next/app'\nimport Cookies from 'js-cookie'\n\nimport { resetStyles, htmlStyles, nprogressStyles } from '../styles'\nimport { ThemeContextProvider, themeType } from '../contexts/themeContext'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props\n    const theme = (Cookies.get('theme') || 'dark') as themeType\n\n    return (\n      <Fragment>\n        <style jsx global>\n          {resetStyles}\n        </style>\n        <style jsx global>\n          {htmlStyles}\n        </style>\n        <style jsx global>\n          {nprogressStyles}\n        </style>\n        <ThemeContextProvider theme={theme}>\n          <Component {...pageProps} />\n        </ThemeContextProvider>\n      </Fragment>\n    )\n  }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}