{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext } from 'react';\nimport { useCookie } from '../../hooks';\nimport { otherTheme } from '.';\nexport const ThemeContext = /*#__PURE__*/createContext({\n  theme: 'dark',\n  setTheme: () => undefined,\n  toggleTheme: () => undefined\n});\nexport const ThemeContextProvider = ({\n  children,\n  theme: initialTheme\n}) => {\n  const [themeCookie, setThemeCookie] = useCookie('theme', initialTheme);\n  const theme = themeCookie;\n\n  const updateHtml = newTheme => {\n    var _document$getElements;\n\n    const html = (_document$getElements = document.getElementsByTagName('html')) === null || _document$getElements === void 0 ? void 0 : _document$getElements[0];\n    if (!html) return;\n    const htmlClasses = html.classList;\n    htmlClasses.add(newTheme);\n  };\n\n  const setTheme = newTheme => {\n    updateHtml(newTheme);\n    setThemeCookie(newTheme);\n  };\n\n  const toggleTheme = () => {\n    const toggled = otherTheme(theme);\n    console.log(`toggleTheme -> toggled`, toggled);\n    setTheme(toggled);\n    return toggled;\n  };\n\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: value,\n    children: children\n  });\n};","map":null,"metadata":{},"sourceType":"module"}