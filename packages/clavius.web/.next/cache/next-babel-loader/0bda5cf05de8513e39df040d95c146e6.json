{"ast":null,"code":"import _slicedToArray from \"/Users/iliyan/Documents/work/clavius/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext } from 'react';\nimport { useCookie } from '../../hooks';\nimport { otherTheme } from '.';\nexport var ThemeContext = /*#__PURE__*/createContext({\n  theme: 'dark',\n  setTheme: function setTheme() {\n    return undefined;\n  },\n  toggleTheme: function toggleTheme() {\n    return undefined;\n  }\n});\nexport var ThemeContextProvider = function ThemeContextProvider(_ref) {\n  var children = _ref.children,\n      initialTheme = _ref.theme;\n\n  var _useCookie = useCookie('theme', initialTheme),\n      _useCookie2 = _slicedToArray(_useCookie, 2),\n      themeCookie = _useCookie2[0],\n      setThemeCookie = _useCookie2[1];\n\n  var theme = themeCookie;\n\n  var updateHtml = function updateHtml(newTheme) {\n    var _document$getElements;\n\n    var html = (_document$getElements = document.getElementsByTagName('html')) === null || _document$getElements === void 0 ? void 0 : _document$getElements[0];\n    if (!html) return;\n    var htmlClasses = html.classList;\n    htmlClasses.add(newTheme);\n  };\n\n  var setTheme = function setTheme(newTheme) {\n    updateHtml(newTheme);\n    setThemeCookie(newTheme);\n  };\n\n  var toggleTheme = function toggleTheme() {\n    var toggled = otherTheme(theme);\n    console.log(\"toggleTheme -> toggled\", toggled);\n    setTheme(toggled);\n    return toggled;\n  };\n\n  var value = {\n    theme: theme,\n    setTheme: setTheme,\n    toggleTheme: toggleTheme\n  };\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: value,\n    children: children\n  });\n};","map":null,"metadata":{},"sourceType":"module"}